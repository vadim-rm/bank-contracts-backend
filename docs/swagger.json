{
    "swagger": "2.0",
    "info": {
        "title": "BMSTU Web Backend",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "paths": {
        "/account/{accountId}/complete": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Завершает заявку на счёт, обновляя её статус по ID заявки.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Завершение заявки на счёт",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID заявки на счёт",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для завершения заявки",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.completeAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Заявка на счёт успешно завершена"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Заявка на счёт не найдена",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/accounts": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Возвращает список всех заявок на счёт с возможностью фильтрации по статусу и дате.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Получение списка заявок на счёт",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Фильтр по статуса",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по дате",
                        "name": "from",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список заявок на счёт",
                        "schema": {
                            "$ref": "#/definitions/handler.getAccountListResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Возвращает подробную информацию о конкретной заявке на счёт по её ID, включая связанные договоры.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Получение информации о заявке на счёт",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID заявки на счёт",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Детали заявки на счёт",
                        "schema": {
                            "$ref": "#/definitions/handler.getAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Заявка на счёт не найдена",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Обновляет номер заявки на счёт по её ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Обновление информации о заявке на счёт",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID заявки на счёт",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления заявки",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Заявка на счёт успешно обновлена"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Заявка на счёт не найдена",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Удаляет заявку на счёт по её ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Удаление заявки на счёт",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID заявки на счёт",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Заявка на счёт успешно удалена"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Заявка на счёт не найдена",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/contract/{contractId}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Удаляет указанный договор из заявки на счёт по их ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-contracts"
                ],
                "summary": "Удаление договора из заявки на счёт",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID заявки на счёт",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID договора",
                        "name": "contractId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Договор успешно удалён из заявки на счёт"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Заявка на счёт или договор не найдены",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/contract/{contractId}/main": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Устанавливает указанный договор в качестве основного для заявки на счёт по их ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-contracts"
                ],
                "summary": "Установить договор основным в заявке на счёт",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID заявки на счёт",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID договора",
                        "name": "contractId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Договор успешно установлен как основной в заявке на счёт"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Заявка на счёт или договор не найдены",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/submit": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Отправляет заявку на счёт по её ID для дальнейшей обработки.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Отправка заявки на счёт",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID заявки на счёт",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Заявка на счёт успешно отправлена"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Заявка на счёт не найдена",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/contracts": {
            "get": {
                "description": "Возвращает список договоров с возможностью фильтрации по названию и типу договора",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Получение списка договоров",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Фильтр по названию договора",
                        "name": "contractName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по типу договора",
                        "name": "contractType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список договоров и учетная запись",
                        "schema": {
                            "$ref": "#/definitions/handler.getListOfContractsResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Создает новый договор с указанными данными.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Создание нового договора",
                "parameters": [
                    {
                        "description": "Данные для создания договора",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.createRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешное создание договора",
                        "schema": {
                            "$ref": "#/definitions/handler.createResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/contracts/{id}": {
            "get": {
                "description": "Возвращает информацию о договоре по его ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Получение информации о договоре",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID договора",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о договоре",
                        "schema": {
                            "$ref": "#/definitions/handler.contractResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Договор не найден",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Обновляет данные существующего договора по его ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Обновление данных договора",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID договора",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления договора",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Договор успешно обновлен"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Договор не найден",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Удаляет существующий договор по его ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Удаление договора",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID договора",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Договор успешно удален"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Договор не найден",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/contracts/{id}/draft": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Добавляет существующий договор в текущую заявку на счёт по его ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Добавление договора в заявку на счёт",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID договора",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Договор успешно добавлен в заявку на счёт"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Договор не найден",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/contracts/{id}/image": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Обновляет изображение для договора по его ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contracts"
                ],
                "summary": "Обновление изображения договора",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID договора",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл изображения для загрузки",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Изображение успешно обновлено"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Договор не найден",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Обновляет имя и/или пароль текущего пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Обновление данных текущего пользователя",
                "parameters": [
                    {
                        "description": "Данные для обновления пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные пользователя успешно обновлены"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Неавторизован",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает нового пользователя с указанными именем, электронной почтой и паролем.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Создание нового пользователя",
                "parameters": [
                    {
                        "description": "Данные для создания пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.createUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь успешно создан"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Аутентифицирует пользователя по электронной почте и паролю и возвращает токен доступа.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Данные для аутентификации пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.authenticateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная аутентификация, токен доступа",
                        "schema": {
                            "$ref": "#/definitions/handler.authenticateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Неавторизован",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Завершает сеанс пользователя, аннулируя токен доступа.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Выход пользователя",
                "responses": {
                    "200": {
                        "description": "Пользователь успешно вышел"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Неавторизован",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.accountContractResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "fee": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "isMain": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handler.accountResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "handler.authenticateUserRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.authenticateUserResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "isModerator": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string"
                }
            }
        },
        "handler.completeAccountRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handler.contractResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "fee": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handler.createRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "fee": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handler.createResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "handler.createUserRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handler.getAccountListResponse": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.getAccountsListAccount"
                    }
                }
            }
        },
        "handler.getAccountResponse": {
            "type": "object",
            "properties": {
                "contracts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.accountContractResponse"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "creator": {
                    "type": "integer"
                },
                "finishedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "moderator": {
                    "type": "integer"
                },
                "number": {
                    "type": "string"
                },
                "requestedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "totalFee": {
                    "type": "integer"
                }
            }
        },
        "handler.getAccountsListAccount": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "creator": {
                    "type": "integer"
                },
                "finishedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "moderator": {
                    "type": "integer"
                },
                "number": {
                    "type": "string"
                },
                "requestedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "totalFee": {
                    "type": "integer"
                }
            }
        },
        "handler.getListOfContractsResponse": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/handler.accountResponse"
                },
                "contracts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.contractResponse"
                    }
                }
            }
        },
        "handler.updateAccountRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "handler.updateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "fee": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handler.updateUserRequest": {
            "type": "object",
            "properties": {
                "passwordHash": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}